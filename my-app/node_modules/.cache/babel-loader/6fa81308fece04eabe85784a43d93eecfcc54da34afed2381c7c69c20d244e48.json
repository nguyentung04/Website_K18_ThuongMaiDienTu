{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:3000/api\";\nexport const fetchPost_categories = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/post_categories`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching order:\", error);\n    throw error;\n  }\n};\nexport const fetchPost_categoriesById = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/post_categories/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching order:\", error);\n    throw error;\n  }\n};\nexport const updatePost_categories = async (id, userData) => {\n  try {\n    // Log the User data being sent for debugging\n    console.log(\"Updating post_categories:\", {\n      id,\n      userData\n    });\n\n    // Perform the PUT request to update the User\n    const response = await axios.put(`${BASE_URL}/post_categories/${id}`, userData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      } // Correct header for JSON data\n    });\n\n    // Return the response data\n    return response.data;\n  } catch (error) {\n    // Log and throw the error for proper error handling\n    console.error(\"Failed to update product:\", error);\n    throw error;\n  }\n};\nexport const deletePost_categories = async id => {\n  try {\n    const response = await axios.delete(`${BASE_URL}/post_categories/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting post_categories:\", error);\n    throw error;\n  }\n};\nexport const addPost_categories = async post_categoriesData => {\n  // Replace with your API endpoint and method to add a category\n  const response = await fetch(`${BASE_URL}/post_categories`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(post_categoriesData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to add category\");\n  }\n  return response.json();\n};","map":{"version":3,"names":["axios","BASE_URL","fetchPost_categories","id","response","get","data","error","console","fetchPost_categoriesById","updatePost_categories","userData","log","put","headers","deletePost_categories","delete","addPost_categories","post_categoriesData","fetch","method","body","JSON","stringify","ok","Error","json"],"sources":["E:/DU-AN-TOT-NGHIEP/Website_K18_ThuongMaiDienTu/my-app/src/service/api/post_categories.js"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = \"http://localhost:3000/api\";\n\nexport const fetchPost_categories = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/post_categories`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching order:\", error);\n    throw error;\n  }\n};\n\nexport const fetchPost_categoriesById = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/post_categories/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching order:\", error);\n    throw error;\n  }\n};\n\nexport const updatePost_categories = async (id, userData) => {\n  try {\n    // Log the User data being sent for debugging\n    console.log(\"Updating post_categories:\", { id, userData });\n\n    // Perform the PUT request to update the User\n    const response = await axios.put(`${BASE_URL}/post_categories/${id}`, userData, {\n      headers: { \"Content-Type\": \"application/json\" }, // Correct header for JSON data\n    });\n\n    // Return the response data\n    return response.data;\n  } catch (error) {\n    // Log and throw the error for proper error handling\n    console.error(\"Failed to update product:\", error);\n    throw error;\n  }\n};\n\nexport const deletePost_categories = async (id) => {\n  try {\n    const response = await axios.delete(`${BASE_URL}/post_categories/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error deleting post_categories:\", error);\n    throw error;\n  }\n};\n\nexport const addPost_categories = async (post_categoriesData) => {\n  // Replace with your API endpoint and method to add a category\n  const response = await fetch(`${BASE_URL}/post_categories`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(post_categoriesData),\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to add category\");\n  }\n  return response.json();\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,EAAE,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,QAAQ,kBAAkB,CAAC;IAC/D,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,wBAAwB,GAAG,MAAON,EAAE,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,QAAQ,oBAAoBE,EAAE,EAAE,CAAC;IACrE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,qBAAqB,GAAG,MAAAA,CAAOP,EAAE,EAAEQ,QAAQ,KAAK;EAC3D,IAAI;IACF;IACAH,OAAO,CAACI,GAAG,CAAC,2BAA2B,EAAE;MAAET,EAAE;MAAEQ;IAAS,CAAC,CAAC;;IAE1D;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAC,GAAGZ,QAAQ,oBAAoBE,EAAE,EAAE,EAAEQ,QAAQ,EAAE;MAC9EG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC,CAAE;IACnD,CAAC,CAAC;;IAEF;IACA,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,qBAAqB,GAAG,MAAOZ,EAAE,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,MAAM,CAAC,GAAGf,QAAQ,oBAAoBE,EAAE,EAAE,CAAC;IACxE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAG,MAAOC,mBAAmB,IAAK;EAC/D;EACA,MAAMd,QAAQ,GAAG,MAAMe,KAAK,CAAC,GAAGlB,QAAQ,kBAAkB,EAAE;IAC1DmB,MAAM,EAAE,MAAM;IACdN,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,mBAAmB;EAC1C,CAAC,CAAC;EACF,IAAI,CAACd,QAAQ,CAACoB,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EACA,OAAOrB,QAAQ,CAACsB,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}